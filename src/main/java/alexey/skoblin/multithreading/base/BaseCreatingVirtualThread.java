package alexey.skoblin.multithreading.base;

public class BaseCreatingVirtualThread {
    //Java 21
    //Виртуальные потоки
    //Отличие от обычных потоков
    //Более легковесные потоки
    //Виртуальные потоки Java подключаются к потокам платформы и выполняются ими.
    //Поток платформы может выполнять только один виртуальный поток одновременно.
    // Новые виртуальные потоки ставятся в очередь до готовности потока платформы.
    // Виртуальные потоки не разделяют время между собой, за исключением случаев блокировки сетевых вызовов.
    // Отсоединение виртуального потока происходит при блокировке сетевого вызова, но не при блокировке файловой системы.
    // Ситуации размонтирования и закрепления виртуальных потоков могут измениться в будущих версиях Java.

    public static void createVirtualThread() {
        Runnable runnable = () -> {
            for(int i=0; i<10; i++) {
                System.out.println("Index: " + i);
            }
        };

        //Создание и запуск потока виртуального типа
        Thread vThread = Thread.ofVirtual().start(runnable);
        //Если вы не хотите, чтобы виртуальный поток запускался немедленно, вместо этого вы можете использовать
        // метод unstarted().
        Thread vThreadUnStarted = Thread.ofVirtual().unstarted(runnable);
        vThreadUnStarted.start();

    }
}
